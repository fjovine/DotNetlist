       XXXXXXXXX      XXXX    XXXXX
	 XXXXXXXXXXXXXXXXXXXXXXX    XXXXXX
	 XXXXXX                    XXXXXX
	  XXXXX                 XXXXXXX
	    XXXXXXXXXXXXXXXXXXXXXXXX
		   XXXXXXXXXXXXXXXXXX
		  
       XXXXXXXXX      XXXX    XXXXX
	 XXXXXXXXXXXXX  XXXXXXX    XXXXXX
	 XXXXXX                    XXXXXX
	  XXXXX                 XXXXXXX
	    XXXXXXXXXXXXXXXXXXXXXXXX
		   XXXXXXXXXXXXXXXXXX
		  
		  
		  
Y, XMin, XMax, Netlist

netlist = 1;
for (y=0; y<max; y++) {
   foreach (segment in seÂ§gments) {      
      segment.netlist = netlist++;
	  if (y==0) {
		 continue;
	  }
	  touchingSegmments = GetTouchingSegmentsScanlineAbove(segment));
	  isFirst = trueS
	  foreach(touchingSegment in touchingSegments) {
	    if (isFirst)
		{
	      netListToPropagate = touchingSegment.Netlist;
		  segment.netList = netListToPropagate;
		  isFirst = false;
		} else {
		  backPropagate(netListToPropagate, touchingSegment.Netlist);
		}
	  }
   }
}   
  

int netlist = 1;
Scanline previousScanline = null;
for (scanline in scanlines) {
   scanline.Foreach((
	(segment)=> 
	{
		segment.Netlist = netlist ++;
		if ((previousScanline == null) || (previousScanline.Y < scanline.Y-1)) 
		{
		   return;
		}
		
		var touchingSegments = previousScanline.GetTouchingSegments(segments, segment);
		isFirst = true;
    	foreach(touchingSegment in touchingSegments) {
		  if (isFirst)
	      {
		    netListToPropagate = touchingSegment.Netlist;
		    segment.netList = netListToPropagate;
		    isFirst = false;
		  } else {
		  backPropagate(netListToPropagate, touchingSegment.Netlist);
		}
	  }		
	}
   });


Top

  11111111111111
  11111111111111



  22222222222222
  22222222222222

Bottom
  11          22
  11          22
  11          22
  11          22
  11          22
  11          22
  11          22

Drill
  11          22
  11          22



  33          44
  33          44


Hole NetTop NetBottom
1    1      1
2    1      2
3    2      1
4    2      2

1 T1, B1


